################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################

########################################################################
# Project setup
########################################################################
cmake_minimum_required(VERSION 2.8)
project(agent_outage)
enable_language(C)
enable_testing()

set(SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")

########################################################################
# options
########################################################################
OPTION (ENABLE_DRAFTS "Build and install draft classes and methods" ON)
IF (ENABLE_DRAFTS)
    ADD_DEFINITIONS (-DAGENT_OUTAGE_BUILD_DRAFT_API)
ENDIF (ENABLE_DRAFTS)

########################################################################
# platform.h
########################################################################
include(CheckIncludeFile)
CHECK_INCLUDE_FILE("linux/wireless.h" HAVE_LINUX_WIRELESS_H)
CHECK_INCLUDE_FILE("net/if_media.h" HAVE_NET_IF_MEDIA_H)

include(CheckFunctionExists)
CHECK_FUNCTION_EXISTS("getifaddrs" HAVE_GETIFADDRS)
CHECK_FUNCTION_EXISTS("freeifaddrs" HAVE_FREEIFADDRS)

include(CheckIncludeFiles)
check_include_files("sys/socket.h;net/if.h" HAVE_NET_IF_H)
if (NOT HAVE_NET_IF_H)
    CHECK_INCLUDE_FILE("net/if.h" HAVE_NET_IF_H)
endif()

file(WRITE "${SOURCE_DIR}/src/platform.h.in" "
#cmakedefine HAVE_LINUX_WIRELESS_H
#cmakedefine HAVE_NET_IF_H
#cmakedefine HAVE_NET_IF_MEDIA_H
#cmakedefine HAVE_GETIFADDRS
#cmakedefine HAVE_FREEIFADDRS
")

configure_file("${SOURCE_DIR}/src/platform.h.in" "${SOURCE_DIR}/src/platform.h")

#The MSVC C compiler is too out of date,
#so the sources have to be compiled as c++
if (MSVC)
    enable_language(CXX)
    file(GLOB sources "${SOURCE_DIR}/src/*.c")
    set_source_files_properties(
        ${sources}
        PROPERTIES LANGUAGE CXX
    )
    set(MORE_LIBRARIES ws2_32 Rpcrt4 Iphlpapi)
endif()

# required libraries for mingw
if (MINGW)
    set(MORE_LIBRARIES -lws2_32 -lrpcrt4 -liphlpapi)
endif()

# required libraries for cygwin
if (CYGWIN)
    set(MORE_LIBRARIES)
endif()

list(APPEND CMAKE_MODULE_PATH "${SOURCE_DIR}")
set(OPTIONAL_LIBRARIES)

########################################################################
# LIBZMQ dependency
########################################################################
find_package(libzmq REQUIRED)
IF (LIBZMQ_FOUND)
    include_directories(${LIBZMQ_INCLUDE_DIRS})
    list(APPEND MORE_LIBRARIES ${LIBZMQ_LIBRARIES})
ELSE (LIBZMQ_FOUND)
    message( FATAL_ERROR "libzmq not found." )
ENDIF (LIBZMQ_FOUND)

########################################################################
# CZMQ dependency
########################################################################
find_package(czmq REQUIRED)
IF (CZMQ_FOUND)
    include_directories(${CZMQ_INCLUDE_DIRS})
    list(APPEND MORE_LIBRARIES ${CZMQ_LIBRARIES})
ELSE (CZMQ_FOUND)
    message( FATAL_ERROR "czmq not found." )
ENDIF (CZMQ_FOUND)

########################################################################
# MALAMUTE dependency
########################################################################
find_package(malamute REQUIRED)
IF (MALAMUTE_FOUND)
    include_directories(${MALAMUTE_INCLUDE_DIRS})
    list(APPEND MORE_LIBRARIES ${MALAMUTE_LIBRARIES})
ELSE (MALAMUTE_FOUND)
    message( FATAL_ERROR "malamute not found." )
ENDIF (MALAMUTE_FOUND)

########################################################################
# BIOSPROTO dependency
########################################################################
find_package(biosproto REQUIRED)
IF (BIOSPROTO_FOUND)
    include_directories(${BIOSPROTO_INCLUDE_DIRS})
    list(APPEND MORE_LIBRARIES ${BIOSPROTO_LIBRARIES})
ELSE (BIOSPROTO_FOUND)
    message( FATAL_ERROR "biosproto not found." )
ENDIF (BIOSPROTO_FOUND)

########################################################################
# includes
########################################################################
set (agent_outage_headers
    include/agent_outage_library.h
    include/agent_outage.h
)

IF (ENABLE_DRAFTS)
    list(APPEND agent_outage_headers
        include/bios_outage_server.h
    )
ENDIF (ENABLE_DRAFTS)

source_group ("Header Files" FILES ${agent_outage_headers})
install(FILES ${agent_outage_headers} DESTINATION include)

########################################################################
# library
########################################################################
include_directories("${SOURCE_DIR}/src" "${SOURCE_DIR}/include")
set (agent_outage_sources
)

IF (ENABLE_DRAFTS)
    list (APPEND agent_outage_sources
        src/bios_outage_server.c
    )
ENDIF (ENABLE_DRAFTS)

source_group("Source Files" FILES ${agent_outage_sources})
if (NOT DEFINED BUILD_SHARED_LIBS)
    SET(BUILD_SHARED_LIBS ON)
endif()
add_library(agent_outage ${agent_outage_sources})
set_target_properties(agent_outage
    PROPERTIES DEFINE_SYMBOL "LIBAGENT_OUTAGE_EXPORTS"
)
set_target_properties(agent_outage
    PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${SOURCE_DIR}/src"
)
target_link_libraries(agent_outage
    ${ZEROMQ_LIBRARIES} ${MORE_LIBRARIES}
)

install(TARGETS agent_outage
    LIBRARY DESTINATION "lib${LIB_SUFFIX}" # .so file
    ARCHIVE DESTINATION "lib${LIB_SUFFIX}" # .lib file
    RUNTIME DESTINATION bin              # .dll file
)

########################################################################
# pkgconfig
########################################################################
set (VERSION "0.1.0")
set (prefix "${CMAKE_INSTALL_PREFIX}")
set (exec_prefix "\${prefix}")
set (libdir "\${prefix}/lib${LIB_SUFFIX}")
set (includedir "\${prefix}/include")
IF (ENABLE_DRAFTS)
    set (pkg_config_defines "-DAGENT_OUTAGE_BUILD_DRAFT_API=1")
ELSE (ENABLE_DRAFTS)
    set (pkg_config_defines "")
ENDIF (ENABLE_DRAFTS)
configure_file(
    "${SOURCE_DIR}/src/libagent_outage.pc.in"
    "${SOURCE_DIR}/src/libagent_outage.pc"
@ONLY)

install(
    FILES "${SOURCE_DIR}/src/libagent_outage.pc"
    DESTINATION "lib${LIB_SUFFIX}/pkgconfig"
)

########################################################################
# executables
########################################################################
add_executable(
    bios-agent-outage
    "${SOURCE_DIR}/src/bios-agent-outage.c"
)
target_link_libraries(
    bios-agent-outage
    agent_outage
    ${LIBZMQ_LIBRARIES}
    ${CZMQ_LIBRARIES}
    ${MALAMUTE_LIBRARIES}
    ${BIOSPROTO_LIBRARIES}
    ${OPTIONAL_LIBRARIES}
)
set_target_properties(
    bios-agent-outage
    PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${SOURCE_DIR}/src"
)
add_executable(
    agent_outage_selftest
    "${SOURCE_DIR}/src/agent_outage_selftest.c"
)
target_link_libraries(
    agent_outage_selftest
    agent_outage
    ${LIBZMQ_LIBRARIES}
    ${CZMQ_LIBRARIES}
    ${MALAMUTE_LIBRARIES}
    ${BIOSPROTO_LIBRARIES}
    ${OPTIONAL_LIBRARIES}
)
set_target_properties(
    agent_outage_selftest
    PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${SOURCE_DIR}/src"
)

########################################################################
# tests
########################################################################
set(CLASSTEST_TIMEOUT 5 CACHE STRING "Timeout of the selftest of a class")
set(TOTAL_TIMEOUT 20 CACHE STRING "Timout of the total testsuite")

set(TEST_CLASSES
)

IF (ENABLE_DRAFTS)
    list (APPEND TEST_CLASSES
    bios_outage_server
    )
ENDIF (ENABLE_DRAFTS)

foreach(TEST_CLASS ${TEST_CLASSES})
    add_test(
        NAME ${TEST_CLASS}
        COMMAND agent_outage_selftest --continue --verbose --test ${TEST_CLASS}
    )
    set_tests_properties(
        ${TEST_CLASS}
        PROPERTIES TIMEOUT ${CLASSTEST_TIMEOUT}
    )
endforeach(TEST_CLASS)


########################################################################
# summary
########################################################################
message (STATUS "*** Version number: ${VERSION}")
message (STATUS "*** Install target: ${CMAKE_INSTALL_PREFIX}")

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
